{"pageProps":{"metadata":{"published":true,"blurb":"Automating personal object detection for home security system","title":"Homemade Thing Recognizer","layout":"post","date":"Nov 19, 2017"},"content":"\nWhen I was in college (around 2010), I worked with OpenCV and facial detection quite a bit, I always found it very interesting. I wanted to build a recognition platform on top of this, but I quickly determined I was in **way** over my head...\n\nNeural networks have come a long way since then.\n\nSince moving into our home, I have been trying to find ways of gathering data. Temperatures inside and outside, moisture levels in the garden, todo list data, camera systems with motion detection, etc. I have been doing this in the hope that one day, I can create a neural networks to help with things around the house.\n\nRecently, I have had a breakthrough in this area.\n\nAfter noticing that I was _accidentally_ storing hundreds of gigabytes of motion detection videos, I realized the treasure this could be!\n\n## Finding the interesting bits\n\nSince I peruse the tech blogs every day, I remembered seeing some new work in the image tagging world. After some searching, I found it again, [YOLO](https://pjreddie.com/darknet/yolo/). After building this library, downloading a previously trained model, and learning a bit of python, I was labeling objects in my videos!\n\nAt first, I naively thought there was no way this could work for my use case. Each tag took around 30 seconds to calculate and I was potentially going to have thousands of frames thrown at this thing.\n\nNO. I went a **much** simpler route that has bene working well.\n\n## Only a few frames\n\nI decided there was no reason to analyze entire videos worth of frames. My motion detection was already doing the hard work for me. I decided to break out **ffmpeg** and extract a few frames of the detection video.\n\nThis greatly simplified my problem. Now all I had to do was tag a few images for each detection video.\n\nI quickly wrote a simple python server that accepted an POST request with an image, and used YOLO to spit out a list of labels. Each which had bounding box data... this was getting exciting.\n\n## Tagging\n\nJust for fun, I whipped up a quick react app which allowed me to _swipe_ through all my tagged objects and give them **real** labels.\n\n## Personal Recognition\n\nTo be honest, the labels were nice, but those were not what I was after. I wanted to know when my wife walks through the gate, if my dog is barking at the fence, or if a friend comes over. That was my goal.\n\nI went back to a library I had tried before and failed with. [ConvNetJS](http://cs.stanford.edu/people/karpathy/convnetjs/docs.html) I had remembered he made a demo which could learn to recognize objects from a dataset with 90% accuracy after just a few minutes.\n\nHere is the [demo](http://cs.stanford.edu/people/karpathy/convnetjs/demo/cifar10.html).\n\nI now had a large amount of raw training data, and a potential library to use.\n\nI knew my raw data needed to be cleaned up and normalized for it to run through a network. I kept it simple, I **cropped** out the detected boundary of the image then used a **contain** algorithm to resize them to 64x64. In the future I want to also save a horizontal flipped version of the image so I can double my training data.\n\nIt took a fews day to figure out ConvNetJS. At first I was only running the data through once per image and expecting it to work ðŸ¤¦.\n\nI went back to the demo and realized he was throwing random input images at the network and teaching it the correct label, while minimizing the \"classification loss\". I coded up something very similar, but without the fancy graphs. It was just a terminal app that took all my normalized images and personal labels and trained them randomly over a set amount of iterations.\n\nAfter tweaking the network training configuration a few times, my training normally takes around 30 mins, and performs quite well.\n\nI now get emails throughout the day of **recognized** people, dogs, cars, etc.\n\nStill more work to do, but I am very happy with where it is right now.\n","slug":"homemade-thing-recognizer","index":17,"path":"/post/homemade-thing-recognizer"},"__N_SSG":true}