{"pageProps":{"metadata":{"published":true,"title":"Reading List","blurb":"Creating ebooks of yearly research history","layout":"post","date":"Dec 17, 2014"},"content":"\r\nI use [Readability](http://readability.com) to bookmark all the articles I come across every day. Since I do not usually have time to sit down and read during the day, I read at night. Although, I prefer reading physical books to my laptop or phone screen. So, I decided to create books of all my articles per year. They would serve as reading list history and also ease the actual \"reading\" process.\r\n\r\n**Plan**\r\n\r\n- Export all my bookmarks from Readability\r\n- Compile the content of all the articles into a book format\r\n- Create PDF for backup and print\r\n\r\n**Export**\r\n\r\nThis was easy. Readbility just emails you a JSON document with all of your bookmark data. Or you can use their API to gather this information.\r\n\r\n**Compile**\r\n\r\nThis was a bit more difficult. Since the export data did not include the article content, I had to \"parse\" the URL's for content. Luckily, Readability's API includes their parser also.\r\n\r\nI wrote this simple node application to combine the article contents together into a HTML page:\r\n\r\n```javascript\r\n//Create Reading List eBook\r\nvar readability = require('readability-api');\r\nvar async = require('async');\r\n\r\nvar articleUrls = require('./readability.json').bookmarks.map(function(\r\n\tarticle\r\n) {\r\n\treturn article.article__url;\r\n});\r\n\r\nreadability.configure({\r\n\tparser_token: '<API KEY>'\r\n});\r\n\r\nvar parser = new readability.parser();\r\n\r\nvar html =\r\n\t'<!DOCTYPE html><html><head><meta charset=\"UTF-8\"><link href=\"http://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/css/bootstrap.min.css\" rel=\"stylesheet\"><title>Reading Material 2014</title></head><body class=\"container\">';\r\n\r\nasync.each(\r\n\tarticleUrls,\r\n\tfunction(url, done) {\r\n\t\tparser.parse(url, function(err, article) {\r\n\t\t\tif (article) {\r\n\t\t\t\thtml +=\r\n\t\t\t\t\t'<article><h1>' +\r\n\t\t\t\t\tarticle.title +\r\n\t\t\t\t\t'</h1><p>' +\r\n\t\t\t\t\tarticle.content +\r\n\t\t\t\t\t'</p></article>';\r\n\t\t\t}\r\n\t\t\tdone();\r\n\t\t});\r\n\t},\r\n\tfunction() {\r\n\t\thtml += '</body></html>';\r\n\t\tconsole.log(html);\r\n\t}\r\n);\r\n```\r\n\r\nAfter creating and styling the HTML a bit, I used Google Chrome to print the page to PDF for me. I realize this could have been done within the node app also, but Chrome was quicker at the time.\r\n\r\nNow each year I can have a digital history of what I read and have physical copies to fill my bookshelf with.\r\n","slug":"reading-list","index":36,"path":"/post/reading-list"},"__N_SSG":true}